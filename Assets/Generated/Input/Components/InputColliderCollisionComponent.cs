//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public ColliderCollisionComponent colliderCollision { get { return (ColliderCollisionComponent)GetComponent(InputComponentsLookup.ColliderCollision); } }
    public bool hasColliderCollision { get { return HasComponent(InputComponentsLookup.ColliderCollision); } }

    public void AddColliderCollision(GameEntity newFirst, GameEntity newSecond) {
        var index = InputComponentsLookup.ColliderCollision;
        var component = (ColliderCollisionComponent)CreateComponent(index, typeof(ColliderCollisionComponent));
        component.first = newFirst;
        component.second = newSecond;
        AddComponent(index, component);
    }

    public void ReplaceColliderCollision(GameEntity newFirst, GameEntity newSecond) {
        var index = InputComponentsLookup.ColliderCollision;
        var component = (ColliderCollisionComponent)CreateComponent(index, typeof(ColliderCollisionComponent));
        component.first = newFirst;
        component.second = newSecond;
        ReplaceComponent(index, component);
    }

    public void RemoveColliderCollision() {
        RemoveComponent(InputComponentsLookup.ColliderCollision);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherColliderCollision;

    public static Entitas.IMatcher<InputEntity> ColliderCollision {
        get {
            if (_matcherColliderCollision == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.ColliderCollision);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherColliderCollision = matcher;
            }

            return _matcherColliderCollision;
        }
    }
}
