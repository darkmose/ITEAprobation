//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveToPointComponent moveToPoint { get { return (MoveToPointComponent)GetComponent(GameComponentsLookup.MoveToPoint); } }
    public bool hasMoveToPoint { get { return HasComponent(GameComponentsLookup.MoveToPoint); } }

    public void AddMoveToPoint(UnityEngine.Vector3 newPoint) {
        var index = GameComponentsLookup.MoveToPoint;
        var component = (MoveToPointComponent)CreateComponent(index, typeof(MoveToPointComponent));
        component.Point = newPoint;
        AddComponent(index, component);
    }

    public void ReplaceMoveToPoint(UnityEngine.Vector3 newPoint) {
        var index = GameComponentsLookup.MoveToPoint;
        var component = (MoveToPointComponent)CreateComponent(index, typeof(MoveToPointComponent));
        component.Point = newPoint;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveToPoint() {
        RemoveComponent(GameComponentsLookup.MoveToPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveToPoint;

    public static Entitas.IMatcher<GameEntity> MoveToPoint {
        get {
            if (_matcherMoveToPoint == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveToPoint);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveToPoint = matcher;
            }

            return _matcherMoveToPoint;
        }
    }
}
